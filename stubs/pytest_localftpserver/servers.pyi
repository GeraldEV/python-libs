import abc
from _typeshed import Incomplete
from collections.abc import Generator
from pyftpdlib.servers import FTPServer
from pytest_localftpserver.helper_functions import (
    DEFAULT_CERTFILE as DEFAULT_CERTFILE,
    arg_validator as arg_validator,
    arg_validator_excepthook as arg_validator_excepthook,
    get_env_dict as get_env_dict,
    get_socket as get_socket,
    pretty_logger as pretty_logger,
    validate_cert_file as validate_cert_file,
)

class WrongFixtureError(Exception): ...

class SimpleFTPServer(FTPServer, metaclass=abc.ABCMeta):
    temp_ftp_home: bool
    username: Incomplete
    password: Incomplete
    def __init__(
        self,
        username: str = ...,
        password: str = ...,
        ftp_home: Incomplete | None = ...,
        ftp_port: int = ...,
        use_TLS: bool = ...,
        certfile=...,
    ) -> None: ...
    def stop(self) -> None: ...
    def clear_tmp_dirs(self) -> None: ...
    def reset_tmp_dirs(self) -> None: ...

class FunctionalityWrapper:
    def __init__(self, use_TLS: bool = ...) -> None: ...
    @property
    def username(self): ...
    @property
    def password(self): ...
    @property
    def server_port(self): ...
    @property
    def server_home(self): ...
    @property
    def anon_root(self): ...
    @property
    def uses_TLS(self): ...
    @property
    def cert_path(self): ...
    def __test_option_validator_logging__(self, a, b: int = ...) -> None: ...
    def reset_tmp_dirs(self) -> None: ...
    def get_login_data(self, style: str = ..., anon: bool = ...): ...
    def format_file_path(self, rel_file_path, style: str = ..., anon: bool = ...): ...
    def get_local_base_path(self, anon: bool = ...): ...
    def get_file_paths(
        self, style: str = ..., anon: bool = ...
    ) -> Generator[Incomplete, None, None]: ...
    def get_file_contents(
        self,
        rel_file_paths: Incomplete | None = ...,
        style: str = ...,
        anon: bool = ...,
        read_mode: str = ...,
    ) -> Generator[Incomplete, None, None]: ...
    def put_files(
        self,
        files_on_local,
        style: str = ...,
        anon: bool = ...,
        overwrite: bool = ...,
        return_paths: str = ...,
        return_content: bool = ...,
        read_mode: str = ...,
    ): ...
    def get_cert(self, style: str = ..., read_mode: str = ...): ...
    def stop(self) -> None: ...
    def __del__(self) -> None: ...

class ThreadFTPServer(FunctionalityWrapper):
    thread: Incomplete
    def __init__(self, use_TLS: bool = ...) -> None: ...
    def stop(self) -> None: ...

class ProcessFTPServer(FunctionalityWrapper):
    process: Incomplete
    def __init__(self, use_TLS: bool = ...) -> None: ...
    def stop(self) -> None: ...

USE_PROCESS: bool
PytestLocalFTPServer = ProcessFTPServer
