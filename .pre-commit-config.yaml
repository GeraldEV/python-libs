# Installation as pre-commit hook:
# $ pip install pre-commit
# $ pre-commit install
# Global installation as a git-template (for new clones):
# $ git config --global init.templateDir ~/.git-template
# $ pre-commit init-templatedir ~/.git-template
# See: https://pre-commit.com/#automatically-enabling-pre-commit-on-repositories
# All hooks: https://pre-commit.com/hooks.html
exclude: "^tests/data"
fail_fast: true
default_stages: [commit]
repos:
-   repo: local
    hooks:
    -   id: forbidden_types
        name: forbidden
        entry: Binaries are not allowed in this repository, generate data if needed
        types: [binary]
        language: fail
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    -   id: no-commit-to-branch
        args: [--branch, master]
        always_run: true
-   repo: https://github.com/akaihola/darker
    rev: 1.7.1
    hooks:
    -   id: darker
        args: [--isort, -tpy33]
        verbose: true
        additional_dependencies:
          - black
          - isort
-   repo: https://github.com/rcmdnk/pyproject-pre-commit
    rev: v0.0.12
    hooks:
    -   id: mypy
        args: [--ignore-missing-imports] # --config-file, "mypy.ini"(config is in pyproject.toml)
        pass_filenames: true
    -   id: shellcheck
    -   id: mdformat-check
-   repo: https://github.com/pycqa/pylint
    rev: v2.17.4
    hooks:
    -   id: pylint
        args:
            [
                -sn, # Don't display the score
                --rcfile=pylintrc,
                --load-plugins=pylint.extensions.eq_without_hash,
                --ignore-imports=yes,
                "--disable=duplicate-code,superfluous-parens,line-too-long",
            ]
        log_file: ".git/pre-commit-pylint.log"
        additional_dependencies:
        -   pyfakefs
        -   six
        -   mock
        -   pandas
-   repo: local
    hooks:
    -   id: run-pyre
        name: run-pyre
        entry: python run-pyre.py
        types: [python]
        language: python
        log_file: ".git/pre-commit-pyre.log"
        additional_dependencies: [pyre-check,mock]
    -   id: pytype
        name: pytype
        entry: pytype
        types: [python]
        verbose: true
        language: python
        language_version: python3.8
        require_serial: true
        additional_dependencies: [pytype]
    -   id: pytest
        name: Check pytest unit tests pass
        types: [python]
        # entry: sh -c "pytest -x -rf --new-first --show-capture=all >/dev/tty"
        entry: sh -c "tox -e py38-covcombine >/dev/tty"
        verbose: true
        language: python
        require_serial: true
        pass_filenames: false
-   repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0  # Use the ref you want to point at
    hooks:
    # Enforce that `# type: ignore` annotations always occur with specific codes.
    # Sample annotations: # type: ignore[attr-defined] # type: ignore[attr-defined,name-defined]
    -   id: python-check-blanket-type-ignore
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
    -   id: check-added-large-files
        args: ['--maxkb=50']
    -   id: check-shebang-scripts-are-executable # TODO: Remove shebangs from xcp/**/*.py
    -   id: check-symlinks
    -   id: check-executables-have-shebangs
    -   id: check-merge-conflict
    -   id: mixed-line-ending
        args: ['--fix=lf']
        description: Replace line endings with LF
